// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SwinBite.Context;

#nullable disable

namespace Swin_Bite.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250602141854_UserNVReferenceAdded")]
    partial class UserNVReferenceAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SwinBite.Models.BankAccount", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BankId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BankId");

                    b.HasAlternateKey("AccountNumber");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            BankId = 100001,
                            AccountNumber = "12345678",
                            Balance = 500.00m,
                            IsActive = true,
                            Pin = "1234"
                        },
                        new
                        {
                            BankId = 100002,
                            AccountNumber = "87654321",
                            Balance = 300.00m,
                            IsActive = true,
                            Pin = "5678"
                        });
                });

            modelBuilder.Entity("SwinBite.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("BankAccountBankId")
                        .HasColumnType("integer");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsAuthenticated")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("BankAccountBankId")
                        .IsUnique();

                    b.HasIndex("BankAccountId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("UserType").HasValue(2);
                });

            modelBuilder.Entity("SwinBite.Models.User", b =>
                {
                    b.HasOne("SwinBite.Models.BankAccount", null)
                        .WithOne("User")
                        .HasForeignKey("SwinBite.Models.User", "BankAccountBankId");

                    b.HasOne("SwinBite.Models.BankAccount", "BankAccount")
                        .WithOne()
                        .HasForeignKey("SwinBite.Models.User", "BankAccountId");

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("SwinBite.Models.BankAccount", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
