// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SwinBite.Context;

#nullable disable

namespace Swin_Bite.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250606034426_ShoppingCartItemManyToOneWithFood")]
    partial class ShoppingCartItemManyToOneWithFood
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SwinBite.Models.BankAccount", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BankId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0m);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BankId");

                    b.HasAlternateKey("AccountNumber");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            BankId = 100001,
                            AccountNumber = "12345678",
                            Balance = 500.00m,
                            IsActive = true,
                            Pin = "1234"
                        },
                        new
                        {
                            BankId = 100002,
                            AccountNumber = "87654321",
                            Balance = 300.00m,
                            IsActive = true,
                            Pin = "5678"
                        },
                        new
                        {
                            BankId = 100003,
                            AccountNumber = "24681012",
                            Balance = 300.00m,
                            IsActive = true,
                            Pin = "4321"
                        },
                        new
                        {
                            BankId = 100004,
                            AccountNumber = "01357911",
                            Balance = 300.00m,
                            IsActive = true,
                            Pin = "8765"
                        });
                });

            modelBuilder.Entity("SwinBite.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FoodId"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PrepTime")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("FoodId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Foods");

                    b.HasDiscriminator<int>("Category");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SwinBite.Models.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShoppingCartId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");

                    b.HasData(
                        new
                        {
                            ShoppingCartId = 1,
                            CustomerId = 1
                        },
                        new
                        {
                            ShoppingCartId = 2,
                            CustomerId = 2
                        });
                });

            modelBuilder.Entity("SwinBite.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShoppingCartItemId"));

                    b.Property<int>("FoodId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("integer");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("FoodId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("SwinBite.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int>("BankAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsAuthenticated")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("BankAccountId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("UserType").HasValue(2);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SwinBite.Models.Dish", b =>
                {
                    b.HasBaseType("SwinBite.Models.Food");

                    b.Property<int>("Calories")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("Ingredients")
                        .HasColumnType("text[]");

                    b.Property<int>("ServingSize")
                        .HasColumnType("integer");

                    b.Property<int>("SpiceLevel")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(0);

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            Category = 0,
                            IsAvailable = true,
                            Name = "Spicy Noodles",
                            PrepTime = 0,
                            Price = 10.00m,
                            RestaurantId = 3,
                            Calories = 0,
                            ServingSize = 0,
                            SpiceLevel = 0
                        },
                        new
                        {
                            FoodId = 3,
                            Category = 0,
                            IsAvailable = true,
                            Name = "Grilled Chicken",
                            PrepTime = 0,
                            Price = 12.00m,
                            RestaurantId = 4,
                            Calories = 0,
                            ServingSize = 0,
                            SpiceLevel = 0
                        });
                });

            modelBuilder.Entity("SwinBite.Models.Drink", b =>
                {
                    b.HasBaseType("SwinBite.Models.Food");

                    b.Property<bool>("HasAlcohol")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCarbonated")
                        .HasColumnType("boolean");

                    b.Property<int>("Temperature")
                        .HasColumnType("integer");

                    b.Property<int>("Volume")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            FoodId = 2,
                            Category = 0,
                            IsAvailable = true,
                            Name = "Iced Tea",
                            PrepTime = 0,
                            Price = 3.00m,
                            RestaurantId = 3,
                            HasAlcohol = false,
                            IsCarbonated = false,
                            Temperature = 0,
                            Volume = 0
                        },
                        new
                        {
                            FoodId = 4,
                            Category = 0,
                            IsAvailable = true,
                            Name = "Lemonade",
                            PrepTime = 0,
                            Price = 2.50m,
                            RestaurantId = 4,
                            HasAlcohol = false,
                            IsCarbonated = false,
                            Temperature = 0,
                            Volume = 0
                        });
                });

            modelBuilder.Entity("SwinBite.Models.Snack", b =>
                {
                    b.HasBaseType("SwinBite.Models.Food");

                    b.PrimitiveCollection<List<string>>("Allergens")
                        .HasColumnType("text[]");

                    b.Property<bool>("IsHealthy")
                        .HasColumnType("boolean");

                    b.Property<int>("PackageSize")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("SwinBite.Models.Customer", b =>
                {
                    b.HasBaseType("SwinBite.Models.User");

                    b.HasDiscriminator().HasValue(0);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BankAccountId = 100001,
                            IsAuthenticated = false,
                            UserType = 0
                        },
                        new
                        {
                            UserId = 2,
                            BankAccountId = 100002,
                            IsAuthenticated = false,
                            UserType = 0
                        });
                });

            modelBuilder.Entity("SwinBite.Models.Restaurant", b =>
                {
                    b.HasBaseType("SwinBite.Models.User");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OperatingHours")
                        .HasColumnType("text");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            UserId = 3,
                            BankAccountId = 100003,
                            IsAuthenticated = false,
                            UserType = 1,
                            Rating = 0f
                        },
                        new
                        {
                            UserId = 4,
                            BankAccountId = 100004,
                            IsAuthenticated = false,
                            UserType = 1,
                            Rating = 0f
                        });
                });

            modelBuilder.Entity("SwinBite.Models.Food", b =>
                {
                    b.HasOne("SwinBite.Models.Restaurant", "Restaurant")
                        .WithMany("Menu")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("SwinBite.Models.ShoppingCart", b =>
                {
                    b.HasOne("SwinBite.Models.Customer", "Customer")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("SwinBite.Models.ShoppingCart", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SwinBite.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("SwinBite.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwinBite.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartItem")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("SwinBite.Models.User", b =>
                {
                    b.HasOne("SwinBite.Models.BankAccount", "BankAccount")
                        .WithOne("User")
                        .HasForeignKey("SwinBite.Models.User", "BankAccountId");

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("SwinBite.Models.BankAccount", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("SwinBite.Models.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartItem");
                });

            modelBuilder.Entity("SwinBite.Models.Customer", b =>
                {
                    b.Navigation("ShoppingCart")
                        .IsRequired();
                });

            modelBuilder.Entity("SwinBite.Models.Restaurant", b =>
                {
                    b.Navigation("Menu");
                });
#pragma warning restore 612, 618
        }
    }
}
