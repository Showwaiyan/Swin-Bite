// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SwinBite.Context;

#nullable disable

namespace Swin_Bite.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601121641_Phase2")]
    partial class Phase2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SwinBite.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountNumber");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = 100001,
                            AccountNumber = "105293041",
                            AgeRestriction = 18
                        },
                        new
                        {
                            Id = 100002,
                            AccountNumber = "205184732",
                            AgeRestriction = 21
                        },
                        new
                        {
                            Id = 100003,
                            AccountNumber = "305729184",
                            AgeRestriction = 0
                        },
                        new
                        {
                            Id = 100004,
                            AccountNumber = "405318907",
                            AgeRestriction = 16
                        },
                        new
                        {
                            Id = 100005,
                            AccountNumber = "505274193",
                            AgeRestriction = 65
                        });
                });

            modelBuilder.Entity("SwinBite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BankAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Type").HasValue("User");
                });

            modelBuilder.Entity("SwinBite.Models.User", b =>
                {
                    b.HasOne("SwinBite.Models.BankAccount", "BankAccount")
                        .WithOne("User")
                        .HasForeignKey("SwinBite.Models.User", "BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("SwinBite.Models.BankAccount", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
